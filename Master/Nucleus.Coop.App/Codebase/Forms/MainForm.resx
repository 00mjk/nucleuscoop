<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWJdYAAAAAABYl1gCWJdYeViX
        WPNYl1j+WJdY/liXWPhYl1iGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFiXWAAAAAAAWJdYUliX
        WOhYl1j/WJdY/1iXWP9Yl1j/WJdY/1iXWP9Yl1j0WJdYYAAAAABYl1gAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYl1gAAAAAAFiX
        WFVYl1j/WJdY/1iXWP9Yllf/VpNV/1aSVf9Xllf/WJdY/1iXWP9Yl1j/WJdYgwAAAABYl1gAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABSk1JLVpZW/1aWVv9Xl1f/UINL/z1OLP85QiT/OEEk/z1NK/9QgUv/WZlZ/1iXWP9Yl1j/WJdYVgAA
        AAAAAAAAKFkoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJHBkQAAAAAAAAAAAJHB
        kRWRwZE0k8OTYnqweu57sHv/eK94/3Gmb/9PXz//RVEy/z5GKv81PCD/ND8h/zE9H/9Jf0f/WJdY/1iX
        WP9YmFj/N2w3aShYKDUoWCgYAAAAAAAAAAAoWCgAAAAAAAAAAAAAAAAAAAAAAAAAAACRwZEAAAAAAJHB
        kQiRwZGxkcGR8ZHBkf+RwZH/kcGR/5HBkf+RwZH/ksKS/5fImP95qHj/O2g6/yhVJ/8oVyj/KFgo/yhZ
        KP9Pik//WJdY/1iXWP9JhEn/KFgo/yhYKPMoWCjAKFgoDAAAAAAoWCgAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRwZE8kcGR8pHBkf+RwZH/kcGR/5PCk/+Tw5P/lMSU/46+jv9qmmr/OGg4/yFRIf8nVyf/KFgo/yhY
        KP8mVib/JVQl/yhZKP9Xllf/WJdY/1mZWf8uYC7/KFgo/yhYKP8oWCj/KFgoTAAAAAAoWCgAAAAAAAAA
        AACRwZEAkcGRMJHBkf6RwZH/kcGR/5LCkv+Iuoj/cKhw/2ShZP9RhE//LFor/yhYKP8oWCj/KFgo/yhY
        KP8nVyf/K1sr/05+Tv9qmmr/fq5+/2KSX/9Yl1j/WZhZ/0yITP8mVib/KFgo/yhYKP8oWCj+KFgoJAAA
        AAAAAAAAkcGRAAAAAACRwZG/kcGR/5LDkv+EroH/RlAy/1SRU/9VlFX/N2w3/yZWJv8oWCj/KFgo/ydZ
        KP8rVSf/NEwm/05lP/+FrID/mMqa/5PDk/+SwpL/i72L/1qYWv9Yl1j/WJdY/zdIJ/8sUSb/KFgo/yhY
        KP8oWCjrAAAAAAAAAAAAAAAAkcGRFJHBkf+RwZH/jryO/zQ4Hf9AUy7/U5JU/ylaKf8oWCj/KFgo/yhY
        KP8qVyj/OUwm/0JHJ/9BSCf/QUgn/z5EJP9VZkL/i7eJ/5HBkf+SwpL/YJ1g/1iXWP9Yl1j/QVgy/zY8
        IP8qVSf/KFgo/yhYKP8oWChMKFgoAAAAAACRwZFtkcGR/5HBkf9lgFv/NTke/zteMv8qWyr/KFgo/yhY
        KP8nWSj/NU4n/0BJKP9FSyn/Rk0q/0dPK/9HTyv/Rk0q/0JJKP9CSin/XnRO/5TElP95sHn/VpZW/1iX
        WP9Jbj//NDcd/y5LJf8oWSj/KFgo/yhYKIYAAAAAAAAAAJHBkY2RwZH/kcGR/1ltS/8zQiL/KFcn/yhY
        KP8oWCj/KlYo/zxIJv9DSSf/Rk0q/0lRKP9MU0X/TVVa/05UW/9MU0j/SFAq/0VMKf9ARiX/R1Iy/4Ks
        fv9Wllb/WJdY/2imav9VZkT/MUQi/ydZKP8oWCj/KFgomAAAAAAAAAAAkcGRfJHBkf+RwZH/W31U/yhY
        KP8oWCj/J1cn/zFlMv8/TCr/Qkko/0ZNKv9KUiz/Ulau/1VV+P9VVf//VVX//1VV9/9SVrP/SFEi/0VM
        Kv9ARyb/P0Un/1eSVf9Yl1j/W5lb/5LBkv9EZj3/J1go/yhYKP8oWCiPAAAAAAAAAACRwZE8kcGR/5HB
        kf9voHD/JVUl/ydXJ/8xZDH/WZta/z5CJP9FTCn/SFEk/1JWkv9VVf//VVX//1RU//9UVP//VVX//1VV
        //9SVrX/SFAq/0RKKf8+QiT/U4ZO/1iXWP9UlFT/lMOU/0Z3R/8nVyf/KFgo/yhYKGYoWCgAAAAAAAAA
        AACRwZH+kcGR/5TElP8oWCj/Klsq/1iYWf9WklX/QEMk/0ZOKv9OWTz/VVX//1VV//9VVP//YG7//2Fu
        //9VVf//VVX//1VV+P9LUkn/RU0p/0BFJf9Qf0n/WJdY/1SUVP+HuIf/MWEx/yhYKP8oWCj/KFgoIwAA
        AACRwZEAAAAAAJPCk5mRwZH/k8OT/3CgcP9Oik7/WJhZ/1SLUf9BRCX/R08r/151cf9fav//T0v//2N1
        //9+tP//g7n//2Nz//9UU///VVX//05UZP9GTSr/QUYm/097R/9Yl1j/WJhY/1qNWv8nVif/KFgo/yRU
        JMMAAAAAAAAAAChYKAAAAAAATH1NmJHBkf+RwZH/kMCQ/2OfY/9Yl1j/VIxR/0FEJf9HTyv/XHNy/4K3
        //+nx///3u3//7XT//9/tP//ZHb//1RT//9VVf//TVRk/0ZOKv9ARib/T3tH/1iXWP9Sj1L/JVUl/yhY
        KP8oWCj/fq5+xAAAAAAAAAAAAAAAAAAAAAAlVSX8a5tr/5TElP+RwZH/jL6M/1mYWv9XklX/P0Mk/0ZN
        Kv9PWTr/hbv//8rg///V5v//3e7//2Z0//9VVf//VVX//1VV+f9LU0r/RUwq/z9FJf9Qfkn/Wpla/zBj
        MP8oWCj/KFgo/0NzQ/+RwZH/kcGRIQAAAAAAAAAAKFgoPChYKP8mVib/hbWF/5HBkf+RwZH/h7mH/1uc
        XP8+QSP/RUwp/0dNJP9mhJj/qs7//8rc//+jrP//T0///1VV//9VVf//UlW//0dPKf9DSij/PUIj/1KG
        Tf81aTX/J1cn/yhYKP8sXCz/i7uL/5HBkf+RwZFmkcGRAAAAAAAoWCh7KFgo/yhYKP9AXzf/lsiX/5HB
        kf+RwZH/i7+M/0BMKv9BSCf/Rk0q/0lRLf9oh5z/fKX//1VV//9VVf//VVX//1FVp/9IUCz/RUwp/0BH
        J/88QCL/M2Qy/yhYKP8oWCj/KFcn/1t6Uv+UxZX/kcGR/5HBkY4AAAAAAAAAAChYKI0oWCj/KFgo/y5D
        IP9OXj7/kL+P/5HBkf+RwZH/hrGD/09dO/8/RST/Rk0p/0ZNJP9PW0D/Ulp6/09Wff9MU0z/R1Aj/0RM
        Kf9BRyf/O0Yl/ytVKP8nWCj/KFgo/ydXKP8wRiP/V2tI/5TGlf+RwZH/kcGRmAAAAAAAAAAAKFgobihY
        KP8oWCj/L0ol/zY6H/9aflH/lMSU/5HBkf+RwZH/kcGR/2V+V/9ARyb/REsp/0VNKv9GTiv/Rk4r/0VN
        Kv9DSyj/QUcn/zVMJ/8nWSj/KFgo/yhYKP8oWCj/Olow/zU5Hv9ohF7/k8ST/5HBkf+RwZGGAAAAAAAA
        AAAoWCgXKFgo/yhYKP8pVij/Njsg/z5RLf9lpGb/jb6N/5LCkv+RwZH/lMaV/4Osf/9ec03/PUIj/z9F
        Jf9CSCf/QUUn/zdLJ/8tVCf/J1ko/yhYKP8oWCj/K1wr/0yHTP9CWjP/Nz0h/4izhv+RwZH/kcGR/5HB
        kUwAAAAAKFgoAAAAAAAoWCjAKFgo/yhYKP8pVSj/Mzke/1iWWP9Xllf/g7eD/5HBkf+RwZH/ksKS/5PE
        lP+LuYr/VmtG/zVIJP8qVij/J1ko/yhYKP8oWCj/KFgo/zBiMP9WlFb/WJZY/z9MLP+Ap3v/ksKS/5HB
        kf+RwZHzAAAAAAAAAAAAAAAAAAAAAChYKCwoWCj/KFgo/yhYKP8oVif/MWIw/0B4QP9Jg0n/V4hV/26c
        bf9ikmL/S3tL/ztrO/8vYDD/J1go/yhYKP8oWCj/JlYm/y5fLv9VglL/a6Vr/3SrdP+Dt4P/jbqM/5LC
        kv+RwZH/kcGR/pHBkSwAAAAAAAAAAAAAAAAAAAAAAAAAAChYKD0oWCjxKFgo/yhYKP8oWCj/J1cn/yZW
        Jv8mVib/JFQk/yVVJf8nVyf/KFgo/yhYKP8nVyf/JlYm/zRkNP9ZiVn/k8OT/5TElP+Tw5P/ksKS/5HB
        kf+RwZH/kcGR/5HBkfSRwZFfAAAAAJHBkQAAAAAAAAAAAAAAAAAoWCgAAAAAAChYKA0oWCiXKFgo/yhY
        KP8oWCj/KFgo/yhYKP8oWCj/KFgo/yhYKP8oWSj/Jlko/0p6Sf+BsoL/j7+P/5LCkv+RwZH/kcGR/5HB
        kf+RwZH/kcGR/5HBkf+RwZGokcGRFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoWCgAKFgoAAAA
        AAAoWCgNKFgoVydXJ4g3bDfsOG04/zluOf87cDv/MUkk/zNCIv82OyD/OT0j/0tZOf9dc1D/d6x3/32z
        ff9+s37/fLJ8/5LCkouRwZFckcGREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKFgoAAAAAAAAAAAAAAAAAFiXWE9Yl1j/WJdY/1iXWP9Ui1H/O0cn/zY7IP82OyD/OEEk/1KG
        Tv9Yl1j/WJdY/1iXWP9Yl1hMAAAAAAAAAAAAAAAAkcGRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYl1gAAAAAAFiXWGZYl1j/WJdY/1iYWP9Zmlr/VI1S/1SM
        Uf9Zmlr/WJhZ/1iXWP9Yl1j/WJdYfAAAAABYl1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYl1gAAAAAAFiXWFRYl1j2WJdY/1iX
        WP9Yl1j/WJdY/1iXWP9Yl1j/WJdY81iXWFgAAAAAWJdYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFiX
        WBRYl1hnWJdYxliXWPhYl1j5WJdYzFiXWG5Yl1gbAAAAAFiXWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//Af///gB///wAP//4AB//wAAD/wAAAP4AAAB8AAAAPAAAADgAAAAYAA
        AAGAAAABgAAAAYAAAAHAAAABwAAAA8AAAAPAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAADwAAAA+AA
        AAfwAAAP/AAAP/+AAf//wAP//+AH///wD/8=
</value>
  </data>
</root>